// menu_struct.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <iostream>
#include "conio.h"
#include <string>
#include "stdlib.h"
#define MAX 6

using namespace std;

struct tintereses
{int numero;
 string interes;
 string descripcion;
 int estado;
};

tintereses V[MAX];

int insertar();
void listar(int N);
void consultar(int N);
void modificar(int N);
void borrar(int N);
void clasificar(int N);
void borrado_fisico(int &N);

void main()
{int N, opc;
do{ 
  cout<<"\n MENU ";
  cout<<"\n [1]---> Insertar";
  cout<<"\n [2]---> Listar";
  cout<<"\n [3]---> Consultar";
  cout<<"\n [4]---> Modificar";
  cout<<"\n [5]---> Borrar";
  cout<<"\n [6]---> Clasificar los datos";
  cout<<"\n [7]---> Borrado Fisico";
  cout<<"\n [0]---> Salir";
  cout<<"Ingrese la opcion";
  cin>>opc;
  switch(opc)
  {	case 1:N=insertar();
         break;
	case 2:listar(N);
	     break;
	case 3:consultar(N);
	     break;
	case 4:modificar(N);
	     break;
	case 5:borrar(N);
	     break;
	case 6:clasificar(N);
	     break;
    case 7:borrado_fisico(N);
	     break;
	case 0:cout<<"salir";
	     break;
	default:cout<<"error";
	     break;
  }
 }while(opc!=0);
system("cls");
getch();
}
 
int insertar()
{	int N;
	cout<<" Ingrese el numero de datos que desee insertar: ";
	cin>>N;
	for(int i=0;i<N;i++)
	{	cout<<"Ingrese el ID: "<<endl;
		cin>>V[i].numero;
		cout<<"Ingrese el interes: "<<endl;
		cin.ignore();
		getline(cin,V[i].interes);
		cout<<"Ingrese la descripcion: "<<endl;
		getline(cin,V[i].descripcion);
		V[i].estado=0;
		getch();
	}
	return N;
}


void listar(int N)
{
	cout<<" Listado"<<endl;
	cout<<"ID"<<"\t ";
	cout<<"Interes"<<"\t";
	cout<<"Descripcion"<<"\t"<<endl;
	for(int i=0;i<N;i++)
	{	if(V[i].estado!=9)
	    {
		cout<<V[i].numero<<"\t";
		cout<<V[i].interes<<"\t";
		cout<<V[i].descripcion<<i<<"\t";
	    } 
	}
}


void consultar(int N)
{   int a, band=0;
	cout<<"Ingrese el ID que quiere consultar: ";
    cin>>a;
	for (int i=0; i<N; i++)
	{  if(a==V[i].numero)
	   {
	   cout<<"Interes: "<<V[i].interes<<"\t";
	   cout<<"Descripcion: "<<V[i].descripcion<<"\t";
	   band=1;
	   }
	}
	if (band==0)
		cout<<"ID no encontrado en la base de datos: "<<endl;
	

}
void modificar(int N)
{  int a;
   bool band=true;
   char resp;
    cout<<"Ingrese el ID que quiere consultar: ";
    cin>>a;
	for (int i=0; i<N; i++)
	{  if(a==V[i].numero)
	   { band=true;
	     cout<<"Interes: "<<V[i].interes;
	     cout<<"Desea modificar el interes?(oloque s)";
	     cin>>resp;
	     if(resp=='s')
	       {cin.ignore();
	        cout<<"Ingrese el nuevo dato: ";
	        getline(cin,V[i].interes);
	       }
	     cout<<"Descripcion: "<<V[i].descripcion;
	     cout<<"Desea modificar la descripcion?(coloque s)";
	     cin>>resp;
	     if(resp=='s')
	       {cin.ignore();
	        cout<<"Ingrese el nuevo dato: ";
	        getline(cin,V[i].descripcion);
	       }
		 
	    }
	    if (band==false)
		cout<<"ID no encontrado en la base de datos: "<<endl;
    }
}
void borrar(int N)
{   //Borrado logico
	int a, band=0;
	cout<<"Ingrese el ID que quiere borrar: ";
    cin>>a;
	for (int i=0; i<N; i++)
	{  if(a==V[i].numero)
	   {
	       V[i].estado=9;
	       band=1;
	   }
	}
	if (band==0)
		cout<<"ID no encontrado en la base de datos: "<<endl;
}
void clasificar(int N)
{
	tintereses aux;
	for (int i=0; i<N-1; i++)
	     for(int j=i+1; j<N; j++)
			 if(V[i].numero>V[j].numero)
				{aux=V[j];
	             V[j]=V[i];
				 V[i]=aux;}
}

void borrado_fisico(int &N)
{   //Borrado fisico
	int a,  band=0;
	cout<<"Ingrese el ID que quiere borrar: ";
    cin>>a;
	for (int i=0; i<N; i++)
	{  if(a==V[i].numero)
	   {   for(int j=i+1; j<N; j++)
	        {V[j-1]=V[j];
			 N--;
	         band=1;
			 return;}
	   }
	}
	if (band==0)
		cout<<"ID no encontrado en la base de datos: "<<endl;
}
